"""
Django settings for rackfoundry project.

Generated by 'django-admin startproject' using Django 1.9.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os

def read_ini():
    ''' Reads the configuration file '''

    ini_dict = {}

    # Parse config.ini and record values
    if os.path.isfile('server_config.ini'):
        with open('server_config.ini') as config:
            for line in config:
                index = line.find("=")

                if index == -1:
                    print "server_config.ini error - Invalid Syntax"

                ini_dict[line[:index]] = line[index+1:].strip()

            config.close()

        # Check errors
        if "secret_key" not in ini_dict.keys():
            print "server_config.ini error - No secret key specified"

        if "debug" not in ini_dict.keys():
            print "server_config.ini error - No debug setting specified"
        else:
            if ini_dict['debug'] == 'True':
                ini_dict['debug'] = True
            elif ini_dict['debug'] == 'False':
                ini_dict['debug'] = False
            else:
                print "server_config.ini error - Invalid debug setting specified"

        if "hosts" not in ini_dict.keys():
            print "server_config.ini error - No hosts specified"
        else:
            ini_dict['hosts'] = ini_dict['hosts'].split(',')
            ini_dict['hosts'] = [unicode(host) for host in ini_dict['hosts']]

    else:
        print "server_config.ini error - File Not Found"

    return ini_dict

ini = read_ini()

if len(ini) == 0:
    ini['secret_key'] = os.environ.get('KEY')
    ini['debug'] = os.environ.get('DEBUG', False)
    ini['hosts'] = ['.herokuapp.com']

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ini['secret_key']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = ini['debug']

ALLOWED_HOSTS = ini['hosts']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
	'base'
]

MIDDLEWARE_CLASSES = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'rackfoundry_technical.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'rackfoundry_technical.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')


